name: online_store
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.3.3 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  #Customize Flutter's default white native splash screen
  flutter_native_splash: ^2.4.0
  #A page slider with parallex design that allows (Text) widgets or body to slide at a different speed with background.
  flutter_onboarding_slider: ^1.0.11
  #A flutter plugin for adapting screen and font size
  flutter_screenutil: ^5.9.3
  #Flutter plugin for Firebase Auth
  firebase_auth: ^4.18.0
  #for statemangement
  flutter_bloc: ^8.1.6
  #Automatically generate code for converting to and from JSON by annotating Dart classes
  json_serializable: ^6.8.0
  json_annotation: ^4.9.0
  #A build system for Dart code generation and modular compilation.
  build_runner: ^2.4.11
  #Functional Programming in Dart for error handling
  dartz: ^0.10.1
  #Simple direct Service Locator that allows to decouple the interface from a concrete implementation and to access the concrete implementation from everywhere in your App"
  get_it: ^7.7.0
  #package to show beautiful dialogs with animations as simply as possible.
  awesome_dialog: ^3.2.1
  #A carousel slider widget, support infinite scroll and custom child widget.
  carousel_slider: ^4.2.1
  #Flutter library to load and cache network images.
  cached_network_image: ^3.3.1
  #for manage api and networking
  dio: ^5.5.0+1
  retrofit: ^4.1.0
  retrofit_generator: ^8.1.1
  #Pretty Dio logger is a Dio interceptor that logs network calls in a pretty, easy to read format.
  pretty_dio_logger: ^1.3.1
  #A package provides an easy way to add shimmer effect in Flutter project
  shimmer: ^3.0.0
  #A simple and animated page view indicator in the form of dots, which you can customise color, size, space and duration.
  page_view_dot_indicator: ^2.3.0
  #An SVG rendering and widget library for Flutter
  flutter_svg: ^2.0.10+1
  #Full flutter support for latest Google Material Symbols Icons.
  material_symbols_icons: ^4.2768.0
  #Flutter plugin for reading and writing simple key-value pairs
  shared_preferences: ^2.2.3
  #Flutter Secure Storage provides API to store data in secure storage.
  flutter_secure_storage: ^9.2.2
  #Flutter plugin for SQLite, a self-contained, high-reliability, embedded, SQL database engine.
  sqflite: ^2.3.3+1

  cloud_firestore: ^4.17.5
  google_sign_in: ^6.2.1
  #Toast Library for Flutter, Easily create toast messages in single line of code
  toast: ^0.3.0
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6
  firebase_core: ^2.32.0

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
     - assets/images/
     - assets/icons/
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Margarine
      fonts:
        - asset: assets/fonts/Margarine.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
